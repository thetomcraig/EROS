{
  "_args": [
    [
      {
        "raw": "react-event-listener@^0.4.5",
        "scope": null,
        "escapedName": "react-event-listener",
        "name": "react-event-listener",
        "rawSpec": "^0.4.5",
        "spec": ">=0.4.5 <0.5.0",
        "type": "range"
      },
      "/Users/tcraig/dev/EROS/node_modules/material-ui"
    ]
  ],
  "_from": "react-event-listener@>=0.4.5 <0.5.0",
  "_id": "react-event-listener@0.4.5",
  "_inCache": true,
  "_location": "/react-event-listener",
  "_nodeVersion": "7.2.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-event-listener-0.4.5.tgz_1491659203493_0.7373269011732191"
  },
  "_npmUser": {
    "name": "oliviertassinari",
    "email": "olivier.tassinari@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {
    "isomorphic-fetch": "2.2.1",
    "loose-envify": "1.3.1",
    "object-assign": "4.1.1",
    "promise": "7.3.1",
    "setimmediate": "1.0.5",
    "ua-parser-js": "0.7.14"
  },
  "_requested": {
    "raw": "react-event-listener@^0.4.5",
    "scope": null,
    "escapedName": "react-event-listener",
    "name": "react-event-listener",
    "rawSpec": "^0.4.5",
    "spec": ">=0.4.5 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/material-ui"
  ],
  "_resolved": "https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.4.5.tgz",
  "_shasum": "e3e895a0970cf14ee8f890113af68197abf3d0b1",
  "_shrinkwrap": null,
  "_spec": "react-event-listener@^0.4.5",
  "_where": "/Users/tcraig/dev/EROS/node_modules/material-ui",
  "author": {
    "name": "olivier.tassinari@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/oliviertassinari/react-event-listener/issues"
  },
  "dependencies": {
    "babel-runtime": "^6.20.0",
    "fbjs": "^0.8.4",
    "prop-types": "^15.5.4",
    "warning": "^3.0.0"
  },
  "description": "A React component that allow to bind events on the global scope",
  "devDependencies": {
    "babel-cli": "^6.24.0",
    "babel-core": "^6.24.0",
    "babel-eslint": "^7.2.1",
    "babel-plugin-transform-dev-warning": "^0.1.0",
    "babel-plugin-transform-react-remove-prop-types": "^0.3.0",
    "babel-plugin-transform-runtime": "^6.15.0",
    "babel-preset-es2015": "^6.24.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-stage-1": "^6.16.0",
    "chai": "^3.5.0",
    "enzyme": "^2.8.0",
    "eslint": "^3.19.0",
    "eslint-config-airbnb": "^14.0.0",
    "eslint-plugin-babel": "^4.1.1",
    "eslint-plugin-flowtype": "^2.30.4",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^3.0.2",
    "eslint-plugin-mocha": "^4.9.0",
    "eslint-plugin-react": "^6.10.3",
    "expect": "^1.20.2",
    "flow-bin": "^0.43.0",
    "jsdom": "^9.12.0",
    "mocha": "^3.2.0",
    "pkgfiles": "^2.3.2",
    "react": "^15.5.3",
    "react-addons-test-utils": "^15.5.0",
    "react-dom": "^15.5.3",
    "rimraf": "^2.5.4",
    "sinon": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "e3e895a0970cf14ee8f890113af68197abf3d0b1",
    "tarball": "https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.4.5.tgz"
  },
  "gitHead": "1d2dec91b429cbc2a01a1fd681ea5041801fdc3e",
  "homepage": "https://github.com/oliviertassinari/react-event-listener",
  "keywords": [
    "react",
    "event",
    "listener",
    "binding"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "oliviertassinari",
      "email": "olivier.tassinari@gmail.com"
    }
  ],
  "name": "react-event-listener",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.0"
  },
  "readme": "# react-event-listener\n\n> A React component for binding events on the global scope.\n\n[![npm version](https://img.shields.io/npm/v/react-event-listener.svg?style=flat-square)](https://www.npmjs.com/package/react-event-listener)\n[![npm downloads](https://img.shields.io/npm/dm/react-event-listener.svg?style=flat-square)](https://www.npmjs.com/package/react-event-listener)\n[![Build Status](https://travis-ci.org/oliviertassinari/react-event-listener.svg?branch=master)](https://travis-ci.org/oliviertassinari/react-event-listener)\n\n[![Dependencies](https://img.shields.io/david/oliviertassinari/react-event-listener.svg?style=flat-square)](https://david-dm.org/oliviertassinari/react-event-listener)\n[![DevDependencies](https://img.shields.io/david/dev/oliviertassinari/react-event-listener.svg?style=flat-square)](https://david-dm.org/oliviertassinari/react-event-listener#info=devDependencies&view=list)\n\n## Installation\n\n```sh\nnpm install --save react-event-listener\n```\n\n## The problem solved\n\nThis module provide a **declarative way** to bind event to a global `EventTarget`.\nIt's using the React lifecycle to bind and unbind at the right time.\n\n## Usage\n\n```js\nimport React, {Component} from 'react';\nimport EventListener, {withOptions} from 'react-event-listener';\n\nclass MyComponent extends Component {\n  handleResize = () => {\n    console.log('resize');\n  };\n\n  handleScroll = () => {\n    console.log('scroll');\n  };\n\n  handleMouseMove = () => {\n    console.log('mousemove');\n  };\n\n  render() {\n    return (\n      <div>\n        <EventListener\n          target=\"window\"\n          onResize={this.handleResize}\n          onScroll={withOptions(this.handleScroll, {passive: true, capture: false})}\n        />\n        <EventListener target={document} onMouseMoveCapture={this.handleMouseMove} />\n      </div>\n    );\n  }\n}\n```\n\n### Note on server-side rendering\n\nWhen doing server side rendering, `document` and `window` aren't available.\nYou can use a string as a `target`, or check that they exist before rendering\nthe component.\n\n### Note on performance\n\nYou should avoid passing inline functions for listeners, because this creates a new `Function` instance on every\nrender, defeating `EventListener`'s `shouldComponentUpdate`, and triggering an update cycle where it removes its old\nlisteners and adds its new listeners (so that it can stay up-to-date with the props you passed in).\n\n### Note on testing\n\nIn [this](https://github.com/facebook/react/issues/5043) issue from React, `TestUtils.Simulate.` methods won't bubble up to `window` or `document`. As a result, you must use [`document.dispatchEvent`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent) or simulate event using [native DOM api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click).\n\nSee our [test cases](https://github.com/oliviertassinari/react-event-listener/blob/master/src/index.spec.js) for more information.\n\n## Contributing\n\nNote: you need to have Flow 0.23.0 or greater to be installed.\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n## Collaborators\n\n - Andy Edwards ([jedwards1211](https://github.com/jedwards1211))\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/oliviertassinari/react-event-listener.git"
  },
  "scripts": {
    "build": "rimraf lib && babel src --out-dir lib --ignore spec.js",
    "flow": "flow",
    "lint": "eslint src test",
    "prepublish": "npm run build && pkgfiles",
    "test": "npm run lint && npm run test:unit && npm run flow",
    "test:unit": "mocha",
    "test:watch": "mocha -w"
  },
  "version": "0.4.5"
}
