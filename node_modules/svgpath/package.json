{
  "_args": [
    [
      {
        "raw": "svgpath@^2.1.0",
        "scope": null,
        "escapedName": "svgpath",
        "name": "svgpath",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "/Users/tcraig/dev/EROS/node_modules/react-svg-morph"
    ]
  ],
  "_from": "svgpath@>=2.1.0 <3.0.0",
  "_id": "svgpath@2.2.1",
  "_inCache": true,
  "_location": "/svgpath",
  "_nodeVersion": "6.8.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/svgpath-2.2.1.tgz_1482538943544_0.769461311865598"
  },
  "_npmUser": {
    "name": "vitaly",
    "email": "vitaly@rcdesign.ru"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "svgpath@^2.1.0",
    "scope": null,
    "escapedName": "svgpath",
    "name": "svgpath",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-svg-morph"
  ],
  "_resolved": "https://registry.npmjs.org/svgpath/-/svgpath-2.2.1.tgz",
  "_shasum": "0834bb67c89a76472b2bd06cc101fa7b517b222c",
  "_shrinkwrap": null,
  "_spec": "svgpath@^2.1.0",
  "_where": "/Users/tcraig/dev/EROS/node_modules/react-svg-morph",
  "bugs": {
    "url": "https://github.com/fontello/svgpath/issues"
  },
  "dependencies": {},
  "description": "Low level toolkit for SVG paths transformations.",
  "devDependencies": {
    "ansi": "^0.3.1",
    "benchmark": "^2.1.1",
    "coveralls": "^2.11.2",
    "eslint": "^3.5.0",
    "istanbul": "^0.4.5",
    "mocha": "^3.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "0834bb67c89a76472b2bd06cc101fa7b517b222c",
    "tarball": "https://registry.npmjs.org/svgpath/-/svgpath-2.2.1.tgz"
  },
  "files": [
    "index.js",
    "index.d.ts",
    "lib/"
  ],
  "gitHead": "6d680cb264fe2ce73e7cbab8ba872b0f7475af40",
  "homepage": "https://github.com/fontello/svgpath#readme",
  "keywords": [
    "svg",
    "path",
    "transform",
    "scale",
    "translate",
    "rotate",
    "matrix"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "vitaly",
      "email": "vitaly@rcdesign.ru"
    }
  ],
  "name": "svgpath",
  "optionalDependencies": {},
  "readme": "svgpath\n=======\n\n[![Build Status](https://img.shields.io/travis/fontello/svgpath/master.svg?style=flat)](https://travis-ci.org/fontello/svgpath)\n[![NPM version](https://img.shields.io/npm/v/svgpath.svg?style=flat)](https://www.npmjs.org/package/svgpath)\n[![Coverage Status](https://img.shields.io/coveralls/fontello/svgpath/master.svg?style=flat)](https://coveralls.io/r/fontello/svgpath?branch=master)\n\n\n> Low level toolkit for SVG paths transformations. Sometime you can't use\n`transform` attributes and have to apply changes to svg paths directly.\nThen this package is for you :) !\n\nNote, this package works with `paths`, not with svg xml sources.\n\n\nInstall\n-------\n\n```bash\nnpm install svgpath\n```\n\n\nExample\n-------\n\n```js\nvar svgpath = require('svgpath');\n\nvar transformed = svgpath(__your_path__)\n                    .scale(0.5)\n                    .translate(100,200)\n                    .rel()\n                    .round(1)\n                    .toString();\n```\n\n\nAPI\n---\n\nAll methods are chainable (return self).\n\n\n### new SvgPath(path) -> self\n\nConstructor. Creates new `SvgPath` class instance with chainable methods.\n`new` can be omited.\n\n\n### .abs() -> self\n\nConverts all path commands to absolute.\n\n\n### .rel() -> self\n\nConverts all path commands to relative. Useful to reduce output size.\n\n\n### .scale(sx [, sy]) -> self\n\nRescale path (the same as SVG `scale` transformation). `sy` = `sx` by default.\n\n\n### .translate(x [, y]) -> self\n\nRescale path (the same as SVG `translate` transformation). `y` = 0 by default.\n\n\n### .rotate(angle [, rx, ry]) -> self\n\nRotate path to `angle` degrees around (rx, ry) point. If rotation center not set,\n(0, 0) used. The same as SVG `rotate` transformation.\n\n\n### .skewX(degrees) -> self\n\nSkew path along the X axis by `degrees` angle.\n\n\n### .skewY(degrees) -> self\n\nSkew path along the Y axis by `degrees` angle.\n\n\n### .matrix([ m1, m2, m3, m4, m5, m6 ]) -> self\n\nApply 2x3 affine transform matrix to path. Params - array. The same as SVG\n`matrix` transformation.\n\n\n### .transform(string) -> self\n\nAny SVG transform or their combination. For example `rotate(90) scale(2,3)`.\nThe same format, as described in SVG standard for `transform` attribute.\n\n\n### .unshort() -> self\n\nConverts smooth curves `T`/`t`/`S`/`s` with \"missed\" control point to\ngeneric curves (`Q`/`q`/`C`/`c`).\n\n\n### .unarc() -> self\n\nReplaces all arcs with bezier curves.\n\n\n### .toString() -> string\n\nReturns final path string.\n\n\n### .round(precision) -> self\n\nRound all coordinates to given decimal precision. By default round to integer.\nUseful to reduce resulting output string size.\n\n\n### .iterate(function(segment, index, x, y) [, keepLazyStack]) -> self\n\nApply iterator to all path segments.\n\n- Each iterator receives `segment`, `index`, `x` and `y` params.\n  Where (x, y) - absolute coordinates of segment start point.\n- Iterator can modify current segment directly (return nothing in this case).\n- Iterator can return array of new segments to replace current one (`[]` means\n  that current segment should be delated).\n\nIf second param `keepLazyStack` set to `true`, then iterator will not evaluate\nstacked transforms prior to run. That can be useful to optimize calculations.\n\n\nAuthors\n-------\n\n- Sergey Batishchev - [@snb2013](https://github.com/snb2013)\n- Vitaly Puzrin - [@puzrin](https://github.com/puzrin)\n- Alex Kocharin - [@rlidwka](https://github.com/rlidwka)\n\n\nLicense\n-------\n\n[MIT](https://github.com/fontello/svgpath/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fontello/svgpath.git"
  },
  "scripts": {
    "coverage": "rm -rf coverage && istanbul cover _mocha",
    "lint": "eslint .",
    "report-coveralls": "istanbul cover _mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "test": "npm run lint && mocha"
  },
  "version": "2.2.1"
}
