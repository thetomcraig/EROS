{
  "_args": [
    [
      {
        "raw": "react-transform-catch-errors@^1.0.2",
        "scope": null,
        "escapedName": "react-transform-catch-errors",
        "name": "react-transform-catch-errors",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "/Users/tcraig/dev/EROS/node_modules/babel-preset-react-hmre"
    ]
  ],
  "_from": "react-transform-catch-errors@>=1.0.2 <2.0.0",
  "_id": "react-transform-catch-errors@1.0.2",
  "_inCache": true,
  "_location": "/react-transform-catch-errors",
  "_nodeVersion": "5.1.1",
  "_npmOperationalInternal": {
    "host": "packages-5-east.internal.npmjs.com",
    "tmp": "tmp/react-transform-catch-errors-1.0.2.tgz_1454433770011_0.6742109549231827"
  },
  "_npmUser": {
    "name": "gaearon",
    "email": "dan.abramov@gmail.com"
  },
  "_npmVersion": "3.7.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-transform-catch-errors@^1.0.2",
    "scope": null,
    "escapedName": "react-transform-catch-errors",
    "name": "react-transform-catch-errors",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/babel-preset-react-hmre"
  ],
  "_resolved": "https://registry.npmjs.org/react-transform-catch-errors/-/react-transform-catch-errors-1.0.2.tgz",
  "_shasum": "1b4d4a76e97271896fc16fe3086c793ec88a9eeb",
  "_shrinkwrap": null,
  "_spec": "react-transform-catch-errors@^1.0.2",
  "_where": "/Users/tcraig/dev/EROS/node_modules/babel-preset-react-hmre",
  "author": {
    "name": "Dan Abramov",
    "email": "dan.abramov@me.com"
  },
  "bugs": {
    "url": "https://github.com/gaearon/react-transform-catch-errors/issues"
  },
  "dependencies": {},
  "description": "React Transform that catches errors inside React components",
  "devDependencies": {
    "babel-cli": "^6.3.17",
    "babel-core": "^6.3.21",
    "babel-preset-es2015": "^6.3.3",
    "babel-preset-stage-0": "^6.3.13",
    "rimraf": "^2.4.3"
  },
  "directories": {},
  "dist": {
    "shasum": "1b4d4a76e97271896fc16fe3086c793ec88a9eeb",
    "tarball": "https://registry.npmjs.org/react-transform-catch-errors/-/react-transform-catch-errors-1.0.2.tgz"
  },
  "files": [
    "lib",
    "src"
  ],
  "gitHead": "ffa576dd1d38399613aa7d8293d9bc0bdfd43594",
  "homepage": "https://github.com/gaearon/react-transform-catch-errors#readme",
  "keywords": [
    "react-transform",
    "react",
    "reactjs",
    "errors",
    "rhl",
    "dx"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "gaearon",
      "email": "dan.abramov@gmail.com"
    },
    {
      "name": "thejameskyle",
      "email": "me@thejameskyle.com"
    }
  ],
  "name": "react-transform-catch-errors",
  "optionalDependencies": {},
  "readme": "# react-transform-catch-errors\n\n[![react-transform channel on discord](https://img.shields.io/badge/discord-react--transform%40reactiflux-61DAFB.svg?style=flat-square)](http://www.reactiflux.com)\n\nA [React Transform](https://github.com/gaearon/babel-plugin-react-transform) that catches errors inside `render()` function and renders a React component with an error message instead.\n\nIt’s up to you to choose the React component to render an error message. For example, you may use [redbox-react](https://github.com/KeywordBrain/redbox-react) that imitates React Native “red screen of death”.\n\n## Installation\n\nFirst, install the [Babel plugin](https://github.com/gaearon/babel-plugin-react-transform):\n\n```\nnpm install --save-dev babel-plugin-react-transform\n```\n\nThen, install the transform:\n\n```\nnpm install --save-dev react-transform-catch-errors\n```\n\nFinally, install the component for rendering errors, for example:\n\n```js\nnpm install --save-dev redbox-react\n```\n\nYou may also use a custom component instead.\n\nNow edit your `.babelrc` to include `extra.babel-plugin-react-transform`.  \nIt must be an array of the transforms you want to use:\n\n```js\n{\n  \"presets\": [\"es2015\", \"stage-0\"],\n  \"env\": {\n    // only enable it when process.env.NODE_ENV is 'development' or undefined\n    \"development\": {\n      \"plugins\": [[\"react-transform\", {\n        \"transforms\": [{\n          \"transform\": \"react-transform-catch-errors\",\n          // now go the imports!\n          \"imports\": [\n\n            // the first import is your React distribution\n            // (if you use React Native, pass \"react-native\" instead)\n\n            \"react\",\n\n            // the second import is the React component to render error\n            // (it can be a local path too, like \"./src/ErrorReporter\")\n\n            \"redbox-react\"\n\n            // the third import is OPTIONAL!\n            // when specified, its export is used as options to the reporter.\n            // see specific reporter's docs for the options it needs.\n\n            // it will be imported from different files so it either has to be a Node module\n            // or a file that you configure with Webpack/Browserify/SystemJS to resolve correctly.\n            // for example, see https://github.com/gaearon/babel-plugin-react-transform/pull/28#issuecomment-144536185\n\n            // , \"my-reporter-options\"\n          ]\n        }]\n        // note: you can put more transforms into array\n        // this is just one of them!\n      }]]\n    }\n  }\n}\n```\n\n**It is up to you to ensure that the transform is not enabled when you compile the app in production mode.** The easiest way to do this is to put React Transform configuration inside `env.development` in `.babelrc` and ensure you’re calling `babel` with `NODE_ENV=development`. See [babelrc documentation](https://babeljs.io/docs/usage/babelrc/#env-option) for more details about using `env` option.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gaearon/react-transform-catch-errors.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "clean": "rimraf lib",
    "prepublish": "npm run clean && npm run build"
  },
  "version": "1.0.2"
}
